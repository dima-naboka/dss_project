{
  "projectKey": "NEW_PRJ",
  "id": "check_if_empty",
  "type": "step_based",
  "name": "check_if_empty",
  "active": false,
  "versionTag": {
    "versionNumber": 25,
    "lastModifiedBy": {
      "login": "admin"
    },
    "lastModifiedOn": 1616418860300
  },
  "checklists": {
    "checklists": []
  },
  "delayedTriggersBehavior": {
    "delayWhileRunning": true,
    "squashDelayedTriggers": true,
    "suppressTriggersWhileRunning": true
  },
  "tags": [],
  "triggers": [],
  "reporters": [],
  "params": {
    "steps": [
      {
        "id": "build_0_true_d_empty_table",
        "type": "build_flowitem",
        "name": "empty_table",
        "runConditionType": "RUN_IF_STATUS_MATCH",
        "runConditionStatuses": [
          "SUCCESS",
          "WARNING"
        ],
        "runConditionExpression": "",
        "resetScenarioStatus": false,
        "delayBetweenRetries": 10,
        "maxRetriesOnFail": 0,
        "params": {
          "builds": [
            {
              "type": "DATASET",
              "itemId": "empty_table_prepared",
              "partitionsSpec": ""
            }
          ],
          "jobType": "RECURSIVE_BUILD",
          "refreshHiveMetastore": true,
          "proceedOnFailure": false
        }
      },
      {
        "id": "comp_metrics_d_empty_table_prepared",
        "type": "compute_metrics",
        "name": "empty_table recalculate",
        "runConditionType": "RUN_IF_STATUS_MATCH",
        "runConditionStatuses": [
          "SUCCESS",
          "WARNING"
        ],
        "runConditionExpression": "",
        "resetScenarioStatus": false,
        "delayBetweenRetries": 10,
        "maxRetriesOnFail": 0,
        "params": {
          "computes": [
            {
              "type": "DATASET",
              "itemId": "empty_table_prepared",
              "partitionsSpec": ""
            }
          ],
          "proceedOnFailure": false
        }
      },
      {
        "id": "check_false_d_empty_table",
        "type": "check_dataset",
        "name": "empty_table has rows?",
        "runConditionType": "RUN_IF_STATUS_MATCH",
        "runConditionStatuses": [
          "SUCCESS",
          "WARNING"
        ],
        "runConditionExpression": "",
        "resetScenarioStatus": false,
        "delayBetweenRetries": 10,
        "maxRetriesOnFail": 0,
        "params": {
          "checks": [
            {
              "type": "DATASET",
              "itemId": "empty_table_prepared",
              "partitionsSpec": ""
            }
          ],
          "warningsAsErrors": false,
          "proceedOnFailure": false
        }
      },
      {
        "id": "kill_scenario_null.check_if_empty",
        "type": "kill_scenario",
        "name": "abort_this_scenario",
        "runConditionType": "RUN_IF_STATUS_MATCH",
        "runConditionStatuses": [
          "FAILED"
        ],
        "runConditionExpression": "WARNING",
        "resetScenarioStatus": false,
        "delayBetweenRetries": 10,
        "maxRetriesOnFail": 0,
        "params": {
          "scenarioId": "check_if_empty",
          "proceedOnFailure": false
        }
      },
      {
        "id": "reportd3c3f766eddd2344316df9c52cd61ff6",
        "type": "send_report",
        "name": "Step #5",
        "runConditionType": "RUN_IF_STATUS_MATCH",
        "runConditionStatuses": [
          "SUCCESS",
          "WARNING"
        ],
        "runConditionExpression": "",
        "resetScenarioStatus": false,
        "delayBetweenRetries": 10,
        "maxRetriesOnFail": 0,
        "params": {
          "failOnMessageNotSent": true,
          "messaging": {
            "type": "slack-scenario",
            "configuration": {
              "message": "DSS Scenario \u003c${scenarioRunURL}|${scenarioName}\u003e triggered by ${triggerName} : ${outcome} ${if(outcome \u003d\u003d \u0027SUCCESS\u0027, \u0027:white_check_mark:\u0027, \u0027\u0027)}${if(outcome \u003d\u003d \u0027FAILED\u0027, \u0027:red_circle:\u0027, \u0027\u0027)}${if(outcome \u003d\u003d \u0027WARNING\u0027, \u0027:red_circle:\u0027, \u0027\u0027)}${if(outcome \u003d\u003d \u0027\u0027 || outcome \u003d\u003d \u0027N/A\u0027, \u0027:bell:\u0027, \u0027\u0027)}",
              "messageMode": "TEXT_MESSAGE",
              "blocks": "[\n    {\n        \"type\": \"section\",\n        \"text\": {\n            \"type\": \"mrkdwn\",\n            \"text\": \"*DSS Scenario \u003c${scenarioRunURL}|${scenarioName}\u003e:* ${outcome} ${if(outcome \u003d\u003d \u0027SUCCESS\u0027, \u0027:white_check_mark:\u0027, \u0027\u0027)}${if(outcome \u003d\u003d \u0027FAILED\u0027, \u0027:red_circle:\u0027, \u0027\u0027)}${if(outcome \u003d\u003d \u0027WARNING\u0027, \u0027:red_circle:\u0027, \u0027\u0027)}${if(outcome \u003d\u003d \u0027\u0027 || outcome \u003d\u003d \u0027N/A\u0027, \u0027:bell:\u0027, \u0027\u0027)}\"\n        }\n    },\n    {\n        \"type\": \"context\",\n        \"elements\": [\n            {\n                \"type\": \"mrkdwn\",\n                \"text\": \"Triggered by ${triggerName}\"\n            }\n        ]\n    }\n]\n",
              "mode": "WEBHOOK",
              "webhookUrl": "https://hooks.slack.com/services/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",
              "useProxy": true,
              "asUser": false,
              "linkNames": false
            }
          }
        }
      }
    ]
  },
  "automationLocal": false,
  "customFields": {}
}